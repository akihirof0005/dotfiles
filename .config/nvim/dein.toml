[[plugins]]
repo = 'Shougo/dein.vim'

# end補完
# https://github.com/tpope/vim-endwise
[[plugins]]
repo = 'tpope/vim-endwise'

# https://github.com/vim-syntastic/syntastic
# 構文エラーチェック
[[plugins]]
repo =  'scrooloose/syntastic'

# https://github.com/w0rp/ale
#[[plugins]]
#repo = 'w0rp/ale'

#https://github.com/tpope/vim-fugitive
# git rapper plugins
[[plugins]]
repo = 'tpope/vim-fugitive'

# A Vim plugin which shows a git diff in the sign column.
# https://github.com/airblade/vim-gitgutter
[[plugins]]
repo = 'airblade/vim-gitgutter'

# 検索時にマッチした個数とそれが何番目であるかの情報を表示する
# https://github.com/osyo-manga/vim-anzu
[[plugins]]
repo = 'osyo-manga/vim-anzu'

# シンタックスハイライト for kotlin
[[plugins]]
repo = 'udalov/kotlin-vim'

# シンタックスハイライト for gradle
[[plugins]]
repo = 'tfnico/vim-gradle'

# 行末スペースをハイライト
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# groovy indent script
# https://www.vim.org/scripts/script.php?script_id=5257
[[plugins]]
repo = 'vim-scripts/groovyindent-unix'
on_ft = ['groovy']

#さまざまな言語をハイライト
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = 'has("nvim")'
on_event = 'BufRead'
hook_post_update = 'TSUpdate'
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
    disable = {
      'lua',
      'c_sharp',
      'vue',
    }
  },
   indent = {
    enable = true,
  },
  ensure_installed = 'all',
}
EOF
'''

[[plugins]]
repo = 'ulwlu/elly.vim'
hook_add = '''
  set background=dark
  set termguicolors
  colorscheme elly
'''

# When the plugin is correctly loaded, there will be a nice statusline at the bottom of each vim window.
# https://github.com/itchyny/lightline.vim
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = { 'colorscheme': 'elly' }
'''

#ファイルの形式を文脈で判断するプラグイン
[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertCharPre'
on_ft = 'snippet'
depends = 'context_filetype.vim'
hook_add = '''
source ~/.config/nvim/plugins/neosnippet.rc.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# LSP client
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_add = '''
source ~/.config/nvim/plugins/rust.rc.vim
let g:rustfmt_autosave = 1
nmap gg=G :rustfmt
'''

#LSP server
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
let g:ale_fix_on_save = 1
let g:ale_fixers = {
\   'rust': ['rustfmt'],
\}
let g:ale_rustfmt_executable = 'rustfmt'
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
set rtp+=~/.vim/pack/XXX/start/LanguageClient-neovim
let g:LanguageClient_serverCommands = { 'haskell': ['haskell-language-server-wrapper', '--lsp'] }
let g:LanguageClient_rootMarkers = ['*.cabal', 'stack.yaml']
'''
